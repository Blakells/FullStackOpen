{"version":3,"sources":["components/Note.js","components/Notification.js","services/notes.js","services/login.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","Notification","message","baseUrl","token","getAll","axios","get","then","response","data","create","newObject","a","config","headers","Authorization","post","res","update","id","put","setToken","newToken","login","credentials","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","username","setUsername","password","setPassword","user","setUser","useEffect","noteService","initialNotes","loggedUserJSON","window","localStorage","getItem","JSON","parse","addNote","event","preventDefault","noteObject","date","Date","toISOString","Math","random","length","returnedNote","concat","handleLogin","loginService","setItem","stringify","setTimeout","handleNoteChange","target","value","notesToShow","filter","onSubmit","type","name","onChange","map","i","key","find","n","changedNote","catch","error","toggleImportanceOf","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b4059285.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Note = ({ note, toggleImportance }) => {\r\n  const label = note.important ? 'make not important' : 'make important'\r\n\r\n  return (\r\n    <li className='note'>\r\n      {note.content}\r\n      <button onClick={toggleImportance}>{label}</button>\r\n      </li>\r\n  )\r\n}\r\n\r\nexport default Note;\r\n","import React from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n  if (message === null) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className='error'>\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification;","import axios from 'axios'\r\nconst baseUrl = 'http://localhost:3001/api/notes'\r\n\r\nlet token = ''\r\n\r\nconst setToken = newToken => {\r\n    token = `bearer ${newToken}`\r\n}\r\n\r\nconst getAll = () => {\r\n    const req = axios.get(baseUrl)\r\n\r\n    return req.then(response => response.data)\r\n    // return req.then(res => res.data)\r\n}\r\n\r\nconst create = async newObject => {\r\n    const config = {\r\n        headers: {Authorization: token}\r\n    }\r\n    const res = await axios.post(baseUrl, newObject, config)\r\n    return res.data\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const req = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return req.then(res => res.data)\r\n}\r\n\r\nexport default {getAll, create, update, setToken}","import axios from 'axios'\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async credentials => {\r\n  const res = await axios.post(baseUrl, credentials)\r\n  return res.data\r\n}\r\n\r\nexport default {login}","import React, { useState, useEffect } from 'react'\r\nimport Note from './components/Note'\r\nimport Notification from './components/Notification'\r\nimport noteService from './services/notes'\r\nimport loginService from './services/login'\r\n\r\nconst App = () => {\r\n  const [notes, setNotes] = useState([])\r\n  const [newNote, setNewNote] = useState('')\r\n  const [showAll, setShowAll] = useState(true)\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [user, setUser] = useState(null)\r\n\r\n  useEffect(() => {\r\n    noteService\r\n      .getAll()\r\n      .then(initialNotes => {\r\n        setNotes(initialNotes)\r\n      })\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const loggedUserJSON = window.localStorage.getItem('loggedNoteappUser')\r\n    if (loggedUserJSON) {\r\n      const user = JSON.parse(loggedUserJSON)\r\n      setUser(user)\r\n      noteService.setToken(user.token)\r\n    }\r\n  }, [])\r\n\r\n  const addNote = (event) => {\r\n    event.preventDefault()\r\n    const noteObject = {\r\n      content: newNote,\r\n      date: new Date().toISOString(),\r\n      important: Math.random() > 0.5,\r\n      id: notes.length + 1,\r\n    }\r\n\r\n    noteService\r\n      .create(noteObject)\r\n      .then(returnedNote => {\r\n        setNotes(notes.concat(returnedNote))\r\n        setNewNote('')\r\n      })\r\n  }\r\n\r\n  const toggleImportanceOf = (id) => {\r\n    const note = notes.find(n => n.id === id)\r\n    const changedNote = { ...note, important: !note.important }\r\n\r\n    noteService\r\n      .update(id, changedNote)\r\n      .then(returnedNote => {\r\n        setNotes(notes.map(note => note.id !== id ? note : returnedNote))\r\n      })\r\n      .catch(error => {\r\n        setErrorMessage(\r\n          `Note '${note.content}' was already removed from server`\r\n        )\r\n        setTimeout(() => {\r\n          setErrorMessage(null)\r\n        }, 5000)\r\n      })\r\n  }\r\n\r\n  const handleLogin = async (event) => {\r\n    event.preventDefault()\r\n    try {\r\n      const user = await loginService.login({\r\n        username, password,\r\n      })\r\n\r\n      window.localStorage.setItem(\r\n        'loggedNoteappUser', JSON.stringify(user)\r\n      )\r\n\r\n      noteService.setToken(user.token)\r\n      setUser(user)\r\n      setUsername('')\r\n      setPassword('')\r\n    } catch (exception) {\r\n      setErrorMessage('wrong credentials')\r\n      setTimeout(() => {\r\n        setErrorMessage(null)\r\n      }, 5000)\r\n    }\r\n  }\r\n\r\n  const handleNoteChange = (event) => {\r\n    setNewNote(event.target.value)\r\n  }\r\n\r\n  const loginForm = () => (\r\n    <form onSubmit={handleLogin}>\r\n      <div>\r\n        username\r\n          <input\r\n          type=\"text\"\r\n          value={username}\r\n          name=\"Username\"\r\n          onChange={({ target }) => setUsername(target.value)}\r\n        />\r\n      </div>\r\n      <div>\r\n        password\r\n          <input\r\n          type=\"password\"\r\n          value={password}\r\n          name=\"Password\"\r\n          onChange={({ target }) => setPassword(target.value)}\r\n        />\r\n      </div>\r\n      <button type=\"submit\">login</button>\r\n    </form>\r\n  )\r\n\r\n  const noteForm = () => (\r\n    <form onSubmit={addNote}>\r\n      <input\r\n        value={newNote}\r\n        onChange={handleNoteChange}\r\n      />\r\n      <button type=\"submit\">save</button>\r\n    </form>\r\n  )\r\n\r\n  const notesToShow = showAll\r\n    ? notes\r\n    : notes.filter(note => note.important)\r\n\r\n  return (\r\n    <div>\r\n      <h1>Notes</h1>\r\n      <Notification message={errorMessage} />\r\n\r\n      {user === null ?\r\n        loginForm() :\r\n        <div>\r\n          <p>{user.name} logged in</p>\r\n          {noteForm()}\r\n        </div>\r\n      }\r\n\r\n      <div>\r\n        <button onClick={() => setShowAll(!showAll)}>\r\n          show {showAll ? 'important' : 'all' }\r\n        </button>\r\n      </div>\r\n      <ul>\r\n        {notesToShow.map((note, i) =>\r\n          <Note\r\n            key={i}\r\n            note={note}\r\n            toggleImportance={() => toggleImportanceOf(note.id)}\r\n          />\r\n        )}\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport './index.css'\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n)"],"sourceRoot":""}